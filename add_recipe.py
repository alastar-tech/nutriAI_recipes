import streamlit as st
import json
import pandas as pd
from datetime import datetime
import uuid

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –ø–æ–¥–∞–≤–ª–µ–Ω–∏—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
st.set_option('client.showErrorDetails', False)

def main():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Å—Å–∏–∏
    if 'recipes' not in st.session_state:
        try:
            with open('my_recipes.json', 'r', encoding='utf-8') as f:
                st.session_state.recipes = json.load(f)
        except FileNotFoundError:
            st.session_state.recipes = []
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤
    if 'temp_ingredients' not in st.session_state:
        st.session_state.temp_ingredients = []

    st.set_page_config(
        page_title="–ú–æ–∏ –ü–ü –†–µ—Ü–µ–ø—Ç—ã", 
        page_icon="üç≥",
        layout="wide"
    )
    
    st.title("üìñ –ë–∞–∑–∞ –º–æ–∏—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–∏—Ç–∞–Ω–∏—è")
    st.write("–î–æ–±–∞–≤–ª—è–π—Ç–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–π—Ç–µ –≤–∞—à–∏ –ª—é–±–∏–º—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã –∑–¥–æ—Ä–æ–≤–æ–≥–æ –ø–∏—Ç–∞–Ω–∏—è!")
    
    tab1, tab2 = st.tabs(["üìù –î–æ–±–∞–≤–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç", "üìä –ú–æ–∏ —Ä–µ—Ü–µ–ø—Ç—ã"])
    
    with tab1:
        final_recipe_form()
    
    with tab2:
        view_recipes_final()

def final_recipe_form():
    st.header("‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ä–µ—Ü–µ–ø—Ç")
    
    # –°–µ–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤
    st.subheader("üßÇ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤")
    
    # –§–æ—Ä–º–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ–¥–Ω–æ–≥–æ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞
    with st.form("add_ingredient_form", clear_on_submit=True):
        col1, col2, col3, col4 = st.columns([3, 2, 2, 2])
        
        with col1:
            ing_name = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞*", placeholder="–Ω–∞–ø—Ä–∏–º–µ—Ä: –∫—É—Ä–∏–Ω–∞—è –≥—Ä—É–¥–∫–∞", key="ing_name")
        
        with col2:
            ing_amount = st.number_input("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ*", min_value=0, value=100, key="ing_amount")
        
        with col3:
            ing_unit = st.selectbox(
                "–ï–¥–∏–Ω–∏—Ü–∞ –∏–∑–º–µ—Ä–µ–Ω–∏—è*", 
                ["–≥", "–º–ª", "—Å—Ç.–ª.", "—á.–ª.", "—à—Ç", "–ø–æ –≤–∫—É—Å—É"],
                key="ing_unit"
            )
        
        with col4:
            needs_prep = st.checkbox("–ù—É–∂–Ω–∞ –ø—Ä–µ–¥–ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞", key="needs_prep")
        
        # –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞
        add_clicked = st.form_submit_button("‚ûï –î–æ–±–∞–≤–∏—Ç—å –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç")
        
        if add_clicked:
            if not ing_name:
                st.error("‚ùå –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞")
            else:
                # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å—Ç–∞–≤–∏–º –ø—Ä–æ—á–µ—Ä–∫ –¥–ª—è "–ø–æ –≤–∫—É—Å—É"
                final_amount = "-" if ing_unit == "–ø–æ –≤–∫—É—Å—É" else ing_amount
                
                new_ingredient = {
                    "name": ing_name.strip(),
                    "amount": final_amount,
                    "unit": ing_unit,
                    "needs_preparation": needs_prep
                }
                st.session_state.temp_ingredients.append(new_ingredient)
                prep_text = " (–Ω—É–∂–Ω–∞ –ø—Ä–µ–¥–ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞)" if needs_prep else ""
                st.success(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω: {final_amount} {ing_unit} {ing_name}{prep_text}")
    
    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤
    if st.session_state.temp_ingredients:
        st.write("---")
        st.write("#### üìã –°–ø–∏—Å–æ–∫ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤:")
        
        # –°–æ–∑–¥–∞–µ–º –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        cols = st.columns([4, 2, 2, 2, 1])
        with cols[0]:
            st.write("**–ü—Ä–æ–¥—É–∫—Ç**")
        with cols[1]:
            st.write("**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ**")
        with cols[2]:
            st.write("**–ï–¥–∏–Ω–∏—Ü–∞**")
        with cols[3]:
            st.write("**–ü—Ä–µ–¥–ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞**")
        with cols[4]:
            st.write("**–î–µ–π—Å—Ç–≤–∏–µ**")
        
        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–∞–∂–¥—ã–π –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        ingredients_to_remove = []
        for i, ingredient in enumerate(st.session_state.temp_ingredients):
            cols = st.columns([4, 2, 2, 2, 1])
            
            with cols[0]:
                # –ü–æ–ª–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è
                new_name = st.text_input(
                    "–ù–∞–∑–≤–∞–Ω–∏–µ", 
                    value=ingredient["name"],
                    key=f"edit_name_{i}",
                    label_visibility="collapsed"
                )
                if new_name != ingredient["name"]:
                    st.session_state.temp_ingredients[i]["name"] = new_name
            
            with cols[1]:
                # –ü–æ–ª–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
                if ingredient["unit"] == "–ø–æ –≤–∫—É—Å—É":
                    st.write("-")
                else:
                    new_amount = st.number_input(
                        "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ",
                        value=int(ingredient["amount"]) if ingredient["amount"] != "-" else 100,
                        min_value=0,
                        key=f"edit_amount_{i}",
                        label_visibility="collapsed"
                    )
                    if new_amount != ingredient["amount"]:
                        st.session_state.temp_ingredients[i]["amount"] = new_amount
            
            with cols[2]:
                # –í—ã–±–æ—Ä –µ–¥–∏–Ω–∏—Ü—ã –∏–∑–º–µ—Ä–µ–Ω–∏—è
                new_unit = st.selectbox(
                    "–ï–¥–∏–Ω–∏—Ü–∞",
                    ["–≥", "–º–ª", "—Å—Ç.–ª.", "—á.–ª.", "—à—Ç", "–ø–æ –≤–∫—É—Å—É"],
                    index=["–≥", "–º–ª", "—Å—Ç.–ª.", "—á.–ª.", "—à—Ç", "–ø–æ –≤–∫—É—Å—É"].index(ingredient["unit"]),
                    key=f"edit_unit_{i}",
                    label_visibility="collapsed"
                )
                if new_unit != ingredient["unit"]:
                    st.session_state.temp_ingredients[i]["unit"] = new_unit
                    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å—Ç–∞–≤–∏–º –ø—Ä–æ—á–µ—Ä–∫ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ "–ø–æ –≤–∫—É—Å—É"
                    if new_unit == "–ø–æ –≤–∫—É—Å—É":
                        st.session_state.temp_ingredients[i]["amount"] = "-"
            
            with cols[3]:
                # –ß–µ–∫–±–æ–∫—Å –ø—Ä–µ–¥–ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏
                new_prep = st.checkbox(
                    "–ü—Ä–µ–¥–ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞",
                    value=ingredient["needs_preparation"],
                    key=f"edit_prep_{i}",
                    label_visibility="collapsed"
                )
                if new_prep != ingredient["needs_preparation"]:
                    st.session_state.temp_ingredients[i]["needs_preparation"] = new_prep
            
            with cols[4]:
                if st.button("‚ùå", key=f"del_{i}"):
                    ingredients_to_remove.append(i)
        
        # –£–¥–∞–ª—è–µ–º –æ—Ç–º–µ—á–µ–Ω–Ω—ã–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã
        for index in sorted(ingredients_to_remove, reverse=True):
            st.session_state.temp_ingredients.pop(index)
            st.rerun()
    
    # –û—Å–Ω–æ–≤–Ω–∞—è —Ñ–æ—Ä–º–∞ —Ä–µ—Ü–µ–ø—Ç–∞
    st.write("---")
    st.subheader("üë®‚Äçüç≥ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ—Ü–µ–ø—Ç–µ")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ session_state —á—Ç–æ–±—ã –Ω–µ —Ç–µ—Ä—è—Ç—å –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö
    if 'current_recipe_name' not in st.session_state:
        st.session_state.current_recipe_name = ""
    if 'current_cooking_time' not in st.session_state:
        st.session_state.current_cooking_time = 30
    if 'current_instructions' not in st.session_state:
        st.session_state.current_instructions = ""
    
    with st.form("recipe_form"):
        col1, col2 = st.columns(2)
        
        with col1:
            name = st.text_input(
                "–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞*", 
                placeholder="–°–∞–ª–∞—Ç –∏–∑ –∫–∏–Ω–æ–∞ —Å –∞–≤–æ–∫–∞–¥–æ",
                value=st.session_state.current_recipe_name,
                key="recipe_name"
            )
            cooking_time = st.number_input(
                "–í—Ä–µ–º—è –≥–æ—Ç–æ–≤–∫–∏ (–º–∏–Ω)*", 
                min_value=1, 
                value=st.session_state.current_cooking_time,
                key="cooking_time"
            )
        
        with col2:
            difficulty = st.selectbox("–°–ª–æ–∂–Ω–æ—Å—Ç—å", ["–ª–µ–≥–∫–æ", "—Å—Ä–µ–¥–Ω–µ", "—Å–ª–æ–∂–Ω–æ"], index=0, key="difficulty")
        
        # –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –≤—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        st.subheader("üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–µ—Ü–µ–ø—Ç–∞")
        categories = st.multiselect(
            "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏*",
            ["–∑–∞–≤—Ç—Ä–∞–∫", "–æ–±–µ–¥", "—É–∂–∏–Ω", "—Å–∞–ª–∞—Ç", "—Å—É–ø", "–¥–µ—Å–µ—Ä—Ç", "–ø–µ—Ä–µ–∫—É—Å"],
            key="categories"
        )
        
        # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è
        st.subheader("üë©‚Äçüç≥ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è")
        instructions = st.text_area(
            "–û–ø–∏—à–∏—Ç–µ —à–∞–≥–∏ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è*",
            placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä:\n1. –û—Ç–≤–∞—Ä–∏—Ç—å –∫–∏–Ω–æ–∞ —Å–æ–≥–ª–∞—Å–Ω–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏\n2. –ù–∞—Ä–µ–∑–∞—Ç—å –∞–≤–æ–∫–∞–¥–æ –∏ –ø–æ–º–∏–¥–æ—Ä—ã\n3. –°–º–µ—à–∞—Ç—å –≤—Å–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã\n4. –ó–∞–ø—Ä–∞–≤–∏—Ç—å –æ–ª–∏–≤–∫–æ–≤—ã–º –º–∞—Å–ª–æ–º",
            height=150,
            value=st.session_state.current_instructions,
            key="instructions"
        )
        
        # –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ—Ü–µ–ø—Ç–∞
        submitted = st.form_submit_button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç")
        
        if submitted:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ session_state
            st.session_state.current_recipe_name = name
            st.session_state.current_cooking_time = cooking_time
            st.session_state.current_instructions = instructions
            
            # –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
            errors = []
            if not name:
                errors.append("‚ùå –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞")
            if not st.session_state.temp_ingredients:
                errors.append("‚ùå –î–æ–±–∞–≤—å—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç")
            if not instructions:
                errors.append("‚ùå –î–æ–±–∞–≤—å—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è")
            if not categories:
                errors.append("‚ùå –í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É –∫–∞—Ç–µ–≥–æ—Ä–∏—é")
            
            if errors:
                for error in errors:
                    st.error(error)
            else:
                # –°–æ–∑–¥–∞–µ–º —Ä–µ—Ü–µ–ø—Ç —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º ID
                recipe = {
                    "id": str(uuid.uuid4()),
                    "name": name,
                    "categories": categories,
                    "difficulty": difficulty,
                    "cooking_time": cooking_time,
                    "ingredients": st.session_state.temp_ingredients.copy(),
                    "instructions": [inst.strip() for inst in instructions.split('\n') if inst.strip()],
                    "created_date": datetime.now().strftime("%Y-%m-%d %H:%M:%S")
                }
                
                save_recipe(recipe)
                # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
                st.session_state.temp_ingredients = []
                # –û—á–∏—â–∞–µ–º –ø–æ–ª—è —Ñ–æ—Ä–º—ã –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
                st.session_state.current_recipe_name = ""
                st.session_state.current_cooking_time = 30
                st.session_state.current_instructions = ""
                st.success("‚úÖ –†–µ—Ü–µ–ø—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!")
                st.balloons()

def save_recipe(recipe):
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ—Ü–µ–ø—Ç –≤ JSON —Ñ–∞–π–ª"""
    # –î–æ–±–∞–≤–ª—è–µ–º ID –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç (–¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å–æ —Å—Ç–∞—Ä—ã–º–∏ —Ä–µ—Ü–µ–ø—Ç–∞–º–∏)
    if 'id' not in recipe:
        recipe['id'] = str(uuid.uuid4())
    
    st.session_state.recipes.append(recipe)
    
    with open('my_recipes.json', 'w', encoding='utf-8') as f:
        json.dump(st.session_state.recipes, f, ensure_ascii=False, indent=2)

def view_recipes_final():
    st.header("üìö –ú–æ–∏ —Ä–µ—Ü–µ–ø—Ç—ã")
    
    if not st.session_state.recipes:
        st.info("üçÉ –ü–æ–∫–∞ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤. –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—ã–π —Ä–µ—Ü–µ–ø—Ç!")
        return
    
    # –ü—Ä–æ—Å—Ç—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã
    col1, col2 = st.columns(2)
    with col1:
        all_categories = list(set([cat for r in st.session_state.recipes for cat in r.get('categories', [])]))
        category_filter = st.selectbox("–§–∏–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏", ["–í—Å–µ"] + all_categories)
    
    with col2:
        difficulties = ["–í—Å–µ"] + list(set([r['difficulty'] for r in st.session_state.recipes]))
        difficulty_filter = st.selectbox("–§–∏–ª—å—Ç—Ä –ø–æ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏", difficulties)
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
    filtered_recipes = st.session_state.recipes
    if category_filter != "–í—Å–µ":
        filtered_recipes = [r for r in filtered_recipes if category_filter in r.get('categories', [])]
    if difficulty_filter != "–í—Å–µ":
        filtered_recipes = [r for r in filtered_recipes if r['difficulty'] == difficulty_filter]
    
    st.write(f"**–ù–∞–π–¥–µ–Ω–æ —Ä–µ—Ü–µ–ø—Ç–æ–≤:** {len(filtered_recipes)}")
    
    for recipe in filtered_recipes:
        categories_text = ", ".join(recipe.get('categories', []))
        with st.expander(f"üç≥ {recipe['name']} | ‚è±Ô∏è{recipe['cooking_time']}–º–∏–Ω | {recipe['difficulty'].upper()} | {categories_text}"):
            display_recipe_final(recipe)

def display_recipe_final(recipe):
    col1, col2 = st.columns(2)
    
    with col1:
        st.write(f"**üì¶ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏:** {', '.join(recipe.get('categories', []))}")
        st.write(f"**‚ö° –°–ª–æ–∂–Ω–æ—Å—Ç—å:** {recipe['difficulty']}")
        st.write(f"**‚è±Ô∏è –í—Ä–µ–º—è –≥–æ—Ç–æ–≤–∫–∏:** {recipe['cooking_time']} –º–∏–Ω")
        # –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ ID
        if 'id' in recipe:
            st.write(f"**üÜî ID —Ä–µ—Ü–µ–ø—Ç–∞:** {recipe['id'][:8]}...")
    
    with col2:
        # –ü–æ–¥—Å—á–µ—Ç –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ —Å –ø—Ä–µ–¥–ø–æ–¥–≥–æ—Ç–æ–≤–∫–æ–π
        prep_ingredients = [ing for ing in recipe['ingredients'] if ing.get('needs_preparation', False)]
        if prep_ingredients:
            st.write("**‚ö†Ô∏è –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã —Å –ø—Ä–µ–¥–ø–æ–¥–≥–æ—Ç–æ–≤–∫–æ–π:**")
            for ing in prep_ingredients:
                st.write(f"- {ing['amount']} {ing['unit']} {ing['name']}")
    
    st.write("**üßÇ –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:**")
    for ing in recipe['ingredients']:
        prep_icon = " ‚ö†Ô∏è" if ing.get('needs_preparation', False) else ""
        st.write(f"- **{ing['amount']} {ing['unit']}** {ing['name']}{prep_icon}")
    
    st.write("**üë©‚Äçüç≥ –ü—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ:**")
    for i, step in enumerate(recipe['instructions']):
        st.write(f"{i+1}. {step}")
    
    st.caption(f"üìÖ –î–æ–±–∞–≤–ª–µ–Ω: {recipe['created_date']}")

if __name__ == "__main__":
    main()